{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@balancer-labs/=node_modules/@balancer-labs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xf8eeb6c6ad4a8a5a0b72eec1fcae67df37b4682be1fa87ab41dc9ce09f02a7f8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe6d060b6d4c8b237a55c33fb6d5cd959491bd815e92e7d9c15c03c3a9a6a064\",\"dweb:/ipfs/QmRAMquirua4mrTYSXFHquMJmgD35Dri5XFjHdpT2ny8bN\"]},\"node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0x23b455edb07b69ed555d8ebecd86a06e548a577ed2d1b3f9354af46d3c97bd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a052890731aa9ad3da4bef76681851cb1cb0bc45fef27abb9650d1d793a4d55\",\"dweb:/ipfs/QmRcs7cqZLq9bQstvEtGc5CYahQNtShaW2FBDqrU9vcWHM\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@balancer-labs/=node_modules/@balancer-labs/","@openzeppelin/=node_modules/@openzeppelin/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol":"ReentrancyGuard"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol":{"keccak256":"0xf8eeb6c6ad4a8a5a0b72eec1fcae67df37b4682be1fa87ab41dc9ce09f02a7f8","urls":["bzz-raw://fe6d060b6d4c8b237a55c33fb6d5cd959491bd815e92e7d9c15c03c3a9a6a064","dweb:/ipfs/QmRAMquirua4mrTYSXFHquMJmgD35Dri5XFjHdpT2ny8bN"],"license":"GPL-3.0-or-later"},"node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol":{"keccak256":"0x23b455edb07b69ed555d8ebecd86a06e548a577ed2d1b3f9354af46d3c97bd92","urls":["bzz-raw://9a052890731aa9ad3da4bef76681851cb1cb0bc45fef27abb9650d1d793a4d55","dweb:/ipfs/QmRcs7cqZLq9bQstvEtGc5CYahQNtShaW2FBDqrU9vcWHM"],"license":"MIT"}},"version":1},"id":37}